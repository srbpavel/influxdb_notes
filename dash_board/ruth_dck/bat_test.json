{
 "meta": {
  "version": "1",
  "type": "dashboard",
  "name": "bat_test-Template",
  "description": "template created from dashboard: bat_test"
 },
 "content": {
  "data": {
   "type": "dashboard",
   "attributes": {
    "name": "bat_test",
    "description": ""
   },
   "relationships": {
    "label": {
     "data": []
    },
    "cell": {
     "data": [
      {
       "type": "cell",
       "id": "0833386038504000"
      },
      {
       "type": "cell",
       "id": "0833386c91d04000"
      },
      {
       "type": "cell",
       "id": "0834658f99d04000"
      },
      {
       "type": "cell",
       "id": "08414c29bfd04000"
      }
     ]
    },
    "variable": {
     "data": []
    }
   }
  },
  "included": [
   {
    "id": "0833386038504000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 0,
     "w": 6,
     "h": 5
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "0833386038504000"
      }
     }
    }
   },
   {
    "id": "0833386c91d04000",
    "type": "cell",
    "attributes": {
     "x": 6,
     "y": 0,
     "w": 6,
     "h": 5
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "0833386c91d04000"
      }
     }
    }
   },
   {
    "id": "0834658f99d04000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 8,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "0834658f99d04000"
      }
     }
    }
   },
   {
    "id": "08414c29bfd04000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 5,
     "w": 12,
     "h": 3
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "08414c29bfd04000"
      }
     }
    }
   },
   {
    "type": "view",
    "id": "0833386038504000",
    "attributes": {
     "name": "12V",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "from(bucket: \"bat_test\")\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n\n|> filter(fn: (r) => r[\"_measurement\"] == \"rpi\")\n\n//\n|> filter(fn: (r) => r[\"_field\"] == \"BatDecimal\")\n//|> filter(fn: (r) => r[\"_field\"] == \"BatAddress\")\n\n//|> filter(fn: (r) => r[\"_value\"] > 5.5)\n//|> filter(fn: (r) => r[\"_value\"] < 3)\n\n|> filter(fn: (r) => r[\"Machine\"] != \"single_cell_18650\")\n\n//|> group(columns: [\"Machine\"])\n//|> group(columns: [\"BatId\"])\n\n//|> drop(columns: [\"_start\", \"_stop\", \"BatCarrier\", \"BatValid\", \"_measurement\", \"_field\", \"host\", \"BatSenKey\"])\n\n//DROP host to JOIN curve\n//|> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"host\", \"BatValid\"])\n\n//PER host curve\n//\n|> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"BatValid\"])\n\n//|> sort(columns: [\"_time\"], desc:true)\n\n//|> group(columns: [\"Machine\", \"BatId\"]) //je to hnusny\n//|> aggregateWindow(every: v.windowPeriod, fn: min, createEmpty: false) //VYHLADI ale ztracis detaily\n\n//|> yield(name: \"min\")",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [
          {
           "name": "mean"
          }
         ],
         "aggregateWindow": {
          "period": "auto",
          "fillValues": false
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "41bdecc2-c5eb-4adc-81df-750261e63c77",
        "type": "scale",
        "hex": "#74D495",
        "name": "Atlantis",
        "value": 0
       },
       {
        "id": "d9a5dd40-4dfe-4e62-b934-852780e8db38",
        "type": "scale",
        "hex": "#3F3FBA",
        "name": "Atlantis",
        "value": 0
       },
       {
        "id": "beaee09a-dbb6-4a6d-b2e7-f3c92ecaf1bd",
        "type": "scale",
        "hex": "#FF4D9E",
        "name": "Atlantis",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "generateXAxisTicks": null,
      "xTotalTicks": 0,
      "xTickStart": 0,
      "xTickStep": 0,
      "yColumn": "_value",
      "generateYAxisTicks": null,
      "yTotalTicks": 0,
      "yTickStart": 0,
      "yTickStep": 0,
      "shadeBelow": true,
      "position": "overlaid",
      "timeFormat": "",
      "hoverDimension": "",
      "legendColorizeRows": false,
      "legendOpacity": 0,
      "legendOrientationThreshold": 0
     }
    }
   },
   {
    "type": "view",
    "id": "0833386c91d04000",
    "attributes": {
     "name": "3.7V",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "from(bucket: \"bat_test\")\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n\n|> filter(fn: (r) => r[\"_measurement\"] == \"rpi\")\n\n|> filter(fn: (r) => r[\"_field\"] == \"BatDecimal\")\n//|> filter(fn: (r) => r[\"_field\"] == \"BatAddress\")\n\n//|> filter(fn: (r) => r[\"_value\"] < 5.5)\n//|> filter(fn: (r) => r[\"_value\"] > 3)\n\n\n|> filter(fn: (r) => r[\"Machine\"] == \"single_cell_18650\")\n\n//|> group(columns: [\"Machine\"])\n\n//|> drop(columns: [\"_start\", \"_stop\", \"BatCarrier\", \"BatValid\", \"_measurement\", \"_field\", \"host\", \"BatSenKey\"])\n\n//DROP host to JOIN curve\n//|> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"host\", \"BatValid\"])\n\n//PER host curve\n//\n|> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"BatValid\"])\n\n|> sort(columns: [\"_time\"], desc:true)\n\n|> yield(name: \"min\")",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [
          {
           "name": "mean"
          }
         ],
         "aggregateWindow": {
          "period": "auto",
          "fillValues": false
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "13f0474e-1072-4773-acfd-9eb2ecc25c16",
        "type": "scale",
        "hex": "#DA6FF1",
        "name": "Ectoplasm",
        "value": 0
       },
       {
        "id": "c27735a3-3f1e-44ad-abe4-8ab91b20939f",
        "type": "scale",
        "hex": "#00717A",
        "name": "Ectoplasm",
        "value": 0
       },
       {
        "id": "c7f55503-ebd4-4f51-a8a7-5014283edfa6",
        "type": "scale",
        "hex": "#ACFF76",
        "name": "Ectoplasm",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "generateXAxisTicks": null,
      "xTotalTicks": 0,
      "xTickStart": 0,
      "xTickStep": 0,
      "yColumn": "_value",
      "generateYAxisTicks": null,
      "yTotalTicks": 0,
      "yTickStart": 0,
      "yTickStep": 0,
      "shadeBelow": true,
      "position": "overlaid",
      "timeFormat": "",
      "hoverDimension": "",
      "legendColorizeRows": false,
      "legendOpacity": 0,
      "legendOrientationThreshold": 0
     }
    }
   },
   {
    "type": "view",
    "id": "0834658f99d04000",
    "attributes": {
     "name": "ain x 4 (Clone)",
     "properties": {
      "shape": "chronograf-v2",
      "type": "table",
      "queries": [
       {
        "text": "from(bucket: \"bat_test\")\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n\n|> filter(fn: (r) => r[\"_measurement\"] == \"rpi\")\n\n//|> filter(fn: (r) => r[\"_field\"] == \"BatDecimal\")\n//|> filter(fn: (r) => r[\"_field\"] == \"BatAddress\")\n\n//|> filter(fn: (r) => r[\"_field\"] == \"BatDecimal\" and r[\"_value\"] < 8)\n//|> filter(fn: (r) => r[\"_value\"] > 3)\n\n//|> group(columns: [\"Machine\"])\n\n//|> drop(columns: [\"_start\", \"_stop\", \"BatCarrier\", \"BatValid\", \"_measurement\", \"_field\", \"host\", \"BatSenKey\"])\n//|> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"host\", \"BatValid\"])\n\n|> drop(columns: [\"host\"])\n\n|> sort(columns: [\"_time\"], desc:true)\n|>limit(n:8)\n|> yield(name: \"min\")",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [
          {
           "name": "mean"
          }
         ],
         "aggregateWindow": {
          "period": "auto",
          "fillValues": false
         }
        }
       }
      ],
      "colors": [
       {
        "id": "base",
        "type": "text",
        "hex": "#ffffff",
        "name": "white",
        "value": 0
       }
      ],
      "tableOptions": {
       "verticalTimeAxis": true,
       "sortBy": {
        "internalName": "",
        "displayName": "",
        "visible": false
       },
       "wrapping": "",
       "fixFirstColumn": false
      },
      "fieldOptions": [
       {
        "internalName": "_time",
        "displayName": "_time",
        "visible": true
       },
       {
        "internalName": "_value",
        "displayName": "_value",
        "visible": true
       },
       {
        "internalName": "BatCarrier",
        "displayName": "BatCarrier",
        "visible": true
       },
       {
        "internalName": "BatId",
        "displayName": "BatId",
        "visible": true
       },
       {
        "internalName": "Machine",
        "displayName": "Machine",
        "visible": true
       },
       {
        "internalName": "_field",
        "displayName": "_field",
        "visible": true
       },
       {
        "internalName": "_start",
        "displayName": "_start",
        "visible": true
       },
       {
        "internalName": "_stop",
        "displayName": "_stop",
        "visible": true
       },
       {
        "internalName": "BatValid",
        "displayName": "BatValid",
        "visible": true
       },
       {
        "internalName": "_measurement",
        "displayName": "_measurement",
        "visible": true
       },
       {
        "internalName": "host",
        "displayName": "host",
        "visible": true
       },
       {
        "internalName": "BatAddress",
        "displayName": "BatAddress",
        "visible": true
       }
      ],
      "timeFormat": "YYYY-MM-DD HH:mm:ss",
      "decimalPlaces": {
       "isEnforced": false,
       "digits": 2
      },
      "note": "",
      "showNoteWhenEmpty": false
     }
    }
   },
   {
    "type": "view",
    "id": "08414c29bfd04000",
    "attributes": {
     "name": "ain x 4 (Clone) (Clone)",
     "properties": {
      "shape": "chronograf-v2",
      "type": "table",
      "queries": [
       {
        "text": "from(bucket: \"bat_test\")\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n|> filter(fn: (r) => r[\"_measurement\"] == \"rpi\")\n\n//|> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"DsValid\"])\n|> drop(columns: [\"_start\", \"_stop\"])\n\n//|> group(columns: [\"Machine\", \"DsId\"])\n|> group(columns: [\"Machine\"])\n\n|> sort(columns: [\"_time\"], desc:true)\n\n|>limit(n: 1)\n\n|>group()\n|> sort(columns: [\"_value\"], desc: true)\n\n//|> yield(name: \"min\")\n",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [
          {
           "name": "mean"
          }
         ],
         "aggregateWindow": {
          "period": "auto",
          "fillValues": false
         }
        }
       }
      ],
      "colors": [
       {
        "id": "base",
        "type": "text",
        "hex": "#ffffff",
        "name": "white",
        "value": 0
       }
      ],
      "tableOptions": {
       "verticalTimeAxis": true,
       "sortBy": {
        "internalName": "",
        "displayName": "",
        "visible": false
       },
       "wrapping": "",
       "fixFirstColumn": false
      },
      "fieldOptions": [
       {
        "internalName": "_time",
        "displayName": "_time",
        "visible": true
       },
       {
        "internalName": "_value",
        "displayName": "_value",
        "visible": true
       },
       {
        "internalName": "BatCarrier",
        "displayName": "BatCarrier",
        "visible": true
       },
       {
        "internalName": "BatId",
        "displayName": "BatId",
        "visible": true
       },
       {
        "internalName": "Machine",
        "displayName": "Machine",
        "visible": true
       },
       {
        "internalName": "_field",
        "displayName": "_field",
        "visible": true
       },
       {
        "internalName": "_start",
        "displayName": "_start",
        "visible": true
       },
       {
        "internalName": "_stop",
        "displayName": "_stop",
        "visible": true
       },
       {
        "internalName": "BatValid",
        "displayName": "BatValid",
        "visible": true
       },
       {
        "internalName": "_measurement",
        "displayName": "_measurement",
        "visible": true
       },
       {
        "internalName": "host",
        "displayName": "host",
        "visible": true
       },
       {
        "internalName": "BatAddress",
        "displayName": "BatAddress",
        "visible": true
       }
      ],
      "timeFormat": "YYYY-MM-DD HH:mm:ss",
      "decimalPlaces": {
       "isEnforced": false,
       "digits": 2
      },
      "note": "",
      "showNoteWhenEmpty": false
     }
    }
   }
  ]
 },
 "labels": []
}